# PostgreSQL DB config
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Set a safe connection pool size
spring.datasource.hikari.initialization-fail-timeout=-1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# disables server-side prepared statement caching, solving the "S_x already exists"
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# enable client-side caching for better perf
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# JPA & Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

logging.level.root=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN
logging.level.org.springframework.test.context=ERROR


# ONLY FOR DEBUG
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Token expiration
# 24 hours for dev (86400000), for prod ~15min (900000)
application.security.jwt.expiration=86400000
# Secret key from local .env file
#spring.config.import=optional:file:.env[.properties]
application.security.jwt.secret=${JWT_SECRET}